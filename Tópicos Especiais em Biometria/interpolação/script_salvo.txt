#IMPORTANDO OS PACOTES
install.packages(c('SPEI','readxl','sf','tidyverse','geobr','tmap','vtable','forecast','ggrepel',
                   'trend','heatwaveR','dplyr','plyr','Metrics','writexl','gridExtra','pals',
                   'raster','gstat','fields','interp','mgcv','automap','patchwork','viridis',
                   'rgdal','rgeos','geodata','sp','maptools','fs','gtools','RSAGA'))
library(maptools)
library(raster)
library(rgeos)
library(geodata)
library(gtools)
library(RSAGA)
library(fs)
library(sp)
library(rgdal)
library(fields)
library(interp)
library(mgcv)
library(automap)
library(patchwork)
library(viridis)
library(raster)
library(gstat)
library(pals)
library(gridExtra) 
library(SPEI)
library(readxl)
library(SPEI)
library(sf)
library(tidyverse)
library(geobr)
library(tmap)
library(vtable)
library(forecast)
library(trend)
library(heatwaveR)
library(dplyr) 
library(plyr)
library(Metrics)
library(writexl)
library(ggrepel)

# 1-Importando a função de cálculo do SPI----------------------------------------------------
source('SPI_function.R')

# 2-Tratamento da base de dados -------------------------------------------------------------
dados <- readr::read_tsv("join_prec_full_region.txt")
dados <- dados[c('cod','year','month','prec')]
dados$prec <- as.numeric(dados$prec)
data2 <- data.frame()
for (i in unique(dados$cod)){
  for (j in c(1,3,6,12)){
    spi <- SPI(as.data.frame(dados[dados$cod==i,][,-1]), 
               scale=j,distr="gamma") %>%tibble::as_tibble() %>% dplyr::select(3) %>% pull()
    data2<-dplyr::bind_rows(data2,bind_cols(cod=i,ano=dados[dados$cod==i,]$year,
                                            mes=dados[dados$cod==i,]$month,
                                            scale=j,spi=spi))}}

# 3-Inserindo as estações do ano -------------------------------------------------------------
#https://recima21.com.br/index.php/recima21/article/view/573
#Primavera -> Setembro, Outubro e Novembro
#Verão -> Dezembro, Janeiro e Feveiro
#Outono -> Março, Abril e Maio
#Inverno -> Junho, Julho e Agosto

data2$season <-c()
data2$season[data2$mes==1] <- "VERAO"
data2$season[data2$mes==2] <- "VERAO"
data2$season[data2$mes==3] <- "OUTONO"
data2$season[data2$mes==4] <- "OUTONO"
data2$season[data2$mes==5] <- "OUTONO"
data2$season[data2$mes==6] <- "INVERNO"
data2$season[data2$mes==7] <- "INVERNO"
data2$season[data2$mes==8] <- "INVERNO"
data2$season[data2$mes==9] <- "PRIMAVERA"
data2$season[data2$mes==10] <- "PRIMAVERA"
data2$season[data2$mes==11] <- "PRIMAVERA"
data2$season[data2$mes==12] <- "VERAO"

# 4-Criando as categorias de SPI -------------------------------------------------------------
data2<-data2 %>% 
  mutate(category=cut(spi, breaks=c(-Inf,-2,-1.5,-1,-0.5,Inf),
                      labels=c("Seca Extrema","Seca severa",
                               "Seca moderada","Seca leve","Não seca")))

# 5-Base de dados das estações pluviométricas ------------------------------------------------
# dados3 <- read.delim2("join_prec_full_region.txt", sep="\t", header = TRUE)
test <- readr::read_tsv("join_prec_full_region.txt")
dados4 <- test %>% filter(year==1962,month==1)%>%arrange(cod)%>% select(cod,lon,lat,region)

# 6- Inserindo as longitudes, latitudes e regiões das estações pluviométricas -----------------
data2<-left_join(data2,dados4,by=c('cod'='cod'))

x <- data2 %>% view()
  readr::write_tsv("teste.txt")
  
#  group_by(cod) %>% 
#  summarise(tot=count(category))
  
# 7-Gráfico das frequências de seca por região ------------------------------------------------
  ggplot(data2 %>% filter(category!="" & category!="Não seca"))+
    geom_bar(aes(x=category,fill=factor(region,levels=c("Sertão","Agreste","Zona da Mata"))),position='dodge')+ 
    scale_fill_brewer(palette="Set1")+
    labs(fill="Região")+
    facet_wrap(~scale)
#percentual de estações que passaram por seca ao longo dos 51 anos
#sertão = 51 x 64
  
  
data3<-data2%>% na.omit() %>% dplyr::group_by(cod,scale,category)%>%
  dplyr::summarise(freq_ns = sum(category=='Não seca',
                                 category=='Seca moderada',
                                 category=='Seca leve',
                                 category=='Seca severa'))
#data3<-data3 %>% filter(category=='Seca severa')
data3<-left_join(data3,dados4,by=c('cod'='cod'))
#head(data2)

# 8-Calculando as frequências de seca anual e mensal ----------------------------------------------

frequencia <- data2 %>% na.omit() %>% dplyr::group_by(cod,scale,ano)%>%dplyr::summarise(freq = sum(spi<(-0.5)))%>% # calcula para valores menores que 0 ou menor que -0.5
  mutate(freq1 = replace(freq, freq >0, 1))
frequencia2<-left_join(frequencia,dados4,by=c('cod'='cod'))
#calculando os valores percentuais de seca por ano e por mês
freq <-frequencia %>% dplyr::group_by(cod,scale) %>% dplyr::summarise(freq_ano = sum(freq1>0,na.rm=TRUE)/51, 
                                                                      freq_mes = sum(freq,na.rm=TRUE)/612)
freq2 <- left_join(freq,dados4,by=c('cod'='cod'))
freq2<-freq2 %>% select(cod,lon,lat,region,scale,freq_ano,freq_mes)

# 9-Calculando as frequências de secas sazonais ----------------------------------------------

frequencia3 <- data2 %>%na.omit() %>%  dplyr::group_by(cod,scale,season,ano)%>%
  dplyr::summarise(freq = sum(spi<(-0.5)))%>% # calcula para valores menores que 0 ou menor que -0.5
  mutate(freq1 = replace(freq, freq >0, 1))
frequencia4<-left_join(frequencia3,dados4,by=c('cod'='cod'))
freq3 <-frequencia3 %>% dplyr::group_by(cod,scale,season) %>% 
  dplyr::summarise(freq_ano = sum(freq1>0,na.rm=TRUE),freq_sazonal = sum(freq,na.rm=TRUE)/204)
freq4 <- left_join(freq3,dados4,by=c('cod'='cod'))
freq4<-freq4 %>% select(cod,lon,lat,season,scale,freq_ano,freq_sazonal)

# 9-Calculando as intensidades de secas anuais e suas categorias --------------------------------

intensidade <- data2 %>%na.omit()%>% group_by(cod,scale,ano)%>% 
  dplyr::summarise(int=mean(spi[spi<0],na.rm=TRUE)) %>% abs()%>% 
  mutate(category=cut(int, breaks=c(0.5, 1, 1.5, 2, Inf),labels=c("Seca leve","Seca moderada","Seca pesada",
                                                                  "Seca extrema")))
intensidade2 <- left_join(intensidade,dados4,by=c('cod'='cod'))
intensidade2<-intensidade2 %>% select(cod,lon,lat,region,scale,int,category)

# 10-Calculando as intensidades de secas sazonais e suas categorias --------------------------------

intensidade3 <- data2 %>% na.omit()%>% group_by(cod,scale,season)%>% 
  dplyr::summarise(int=abs(mean(spi[spi<0],na.rm=TRUE))) %>% 
  mutate(category=cut(int, breaks=c(0.5, 1, 1.5, 2, Inf),labels=c("Seca leve","Seca moderada","Seca pesada",
                                                                  "Seca extrema")))
intensidade4 <- left_join(intensidade3,dados4,by=c('cod'='cod'))
intensidade4<-intensidade4 %>% select(cod,lon,lat,region,scale,int,category,season)

# 11-Calculando a Área afetada pela seca e suas categorias -------------------------------------

#categorias calculadas com base no número de estações por região
#PARA COLOCAR ANUAL, TROCA freq POR freq1
freqqq<- frequencia %>% group_by(ano,cod,scale) %>% dplyr::summarise(area=sum(freq,na.rm = TRUE))%>% 
  mutate(area1 = replace(area, area >0, 1))

freqqq<-left_join(freqqq,dados4,by=c('cod'='cod'))
area<- freqqq %>%group_by(ano,scale,region) %>% 
  dplyr::summarise(area_total=sum(area1,na.rm = TRUE)/133)%>% 
  mutate(category=cut(area_total, breaks=c(0,0.1, 0.25, 0.33, 0.5, 1),
                      labels=c("Sem seca aparente","Seca local","Seca regional parcial",
                               "Seca regional","Seca global"))) 

freqqq2<- frequencia2 %>% group_by(ano,cod,scale,region) %>% dplyr::summarise(area=sum(freq,na.rm = TRUE))%>% 
  mutate(area1 = replace(area, area >0, 1))
freqqq2$estacoes <-c()
freqqq2$estacoes[freqqq2$region=='SertÃ£o'] <- 64
freqqq2$estacoes[freqqq2$region=='Agreste'] <- 45
freqqq2$estacoes[freqqq2$region=='Zona da Mata'] <- 24
area2<- freqqq2 %>%group_by(ano,scale,region,estacoes) %>% dplyr::summarise(area_total=sum(area1,na.rm = TRUE))

area2<-area2%>%mutate(area_percentual=area_total/estacoes,category=cut(area_percentual,breaks=c(0,0.1, 0.25, 0.33, 0.5, 1),
                                                                       labels=c("Sem seca aparente","Seca local","Seca regional parcial","Seca regional","Seca global")))

g1<-area2%>%  ggplot()+geom_point(aes(y=area_percentual,x=ano),size=3.5)+ 
  geom_line(aes(y=area_percentual,x=ano),size=.5)+
  geom_hline(yintercept=0.1, linetype="dashed", color = "red",size=.8)+ 
  geom_hline(yintercept=0.25, linetype="dashed", color = "red",size=.8)+ 
  geom_hline(yintercept=0.33, linetype="dashed", color = "red",size=.8)+ 
  geom_hline(yintercept=0.5, linetype="dashed", color = "red",size=.8)+ 
  geom_hline(yintercept=1, linetype="dashed", color = "red",size=.8)+ facet_wrap(~scale)

ggplot(area2,aes(category,area_total,fill=region))+geom_bar(stat="identity",position="dodge")+
  scale_fill_brewer(palette="Set1")+facet_wrap(~scale)

ggplot(area2)+geom_bar(aes(x=category,fill=region),position='dodge')+ 
  scale_fill_brewer(palette="Set1")+facet_wrap(~scale)

# 12-Calculando a Área afetada pela seca e suas categorias -------------------------------------
#categorias calculadas com base no número de estações totais do estado
freqqq<- frequencia %>% group_by(ano,cod,scale) %>% dplyr::summarise(area=sum(freq,na.rm = TRUE))%>% 
  mutate(area1 = replace(area, area >0, 1))

freqqq2<-left_join(freqqq,dados4,by=c('cod'='cod'))
area3<- freqqq %>%group_by(ano,scale) %>% dplyr::summarise(area_total=sum(area1,na.rm = TRUE)/133)%>% 
  mutate(category=cut(area_total, breaks=c(0,0.1, 0.25, 0.33, 0.5, 1),
                      labels=c("Sem seca aparente","Seca local","Seca regional parcial",
                               "Seca regional","Seca global"))) 

freqqq<-left_join(freqqq,dados4,by=c('cod'='cod'))
area<- freqqq %>%group_by(ano,scale,region) %>% dplyr::summarise(area_total=sum(area1,na.rm = TRUE)/133)%>% 
  mutate(category=cut(area_total, breaks=c(0,0.1, 0.25, 0.33, 0.5, 1),
                      labels=c("Sem seca aparente","Seca local","Seca regional parcial",
                               "Seca regional","Seca global"))) 

g2<-area3%>%  ggplot()+geom_point(aes(y=area_total,x=ano),size=3.5)+ 
  geom_line(aes(y=area_total,x=ano),size=.5)+
  geom_hline(yintercept=0.1, linetype="dashed", color = "red",size=.8)+ 
  geom_hline(yintercept=0.25, linetype="dashed", color = "red",size=.8)+ 
  geom_hline(yintercept=0.33, linetype="dashed", color = "red",size=.8)+ 
  geom_hline(yintercept=0.5, linetype="dashed", color = "red",size=.8)+ 
  geom_hline(yintercept=1, linetype="dashed", color = "red",size=.8)+
  facet_wrap(~scale)

#area %>% view()
grid.arrange(g1,g2)

# 13-Calculando a Área afetada pela seca e suas categorias (sazonal) -------------------------------------

freqqq3<- frequencia3 %>% group_by(cod,season,scale) %>% dplyr::summarise(area=sum(freq,na.rm = TRUE))%>% 
  mutate(area1 = replace(area, area >0, 1))
freqqq3<-left_join(freqqq3,dados4,by=c('cod'='cod'))
freqqq3$estacoes <-c()
freqqq3$estacoes[freqqq3$region=='SertÃ£o'] <- 64
freqqq3$estacoes[freqqq3$region=='Agreste'] <- 45
freqqq3$estacoes[freqqq3$region=='Zona da Mata'] <- 24

area3<- freqqq3 %>%group_by(cod,scale,season) %>% dplyr::summarise(area_total=sum(area,na.rm = TRUE)/133)%>% 
  mutate(category=cut(area_total, breaks=c(0,0.1, 0.25, 0.33, 0.5, 1),
                      labels=c("Sem seca aparente","Seca local","Seca regional parcial","Seca regional",
                               "Seca global")))
area3<-left_join(area3,dados4,by=c('cod'='cod'))

area4<- freqqq3 %>%group_by(cod,season,scale,region) %>% 
  dplyr::summarise(area_total=sum(area,na.rm = TRUE)/133)%>% 
  mutate(category=cut(area_total, breaks=c(0,0.1, 0.25, 0.33, 0.5, 1),
                      labels=c("Sem seca aparente","Seca local","Seca regional parcial",
                               "Seca regional","Seca global")))

area4<-left_join(area4,dados4[c('cod','lon','lat')],by=c('cod'='cod'))

area3%>%  ggplot()+geom_line(aes(y=area_total,x=ano),size=3.5)+ 
  geom_line(aes(y=area_total,x=season),size=.5)+
  geom_hline(yintercept=0.1, linetype="dashed", color = "red",size=.8)+ 
  geom_hline(yintercept=0.25, linetype="dashed", color = "red",size=.8)+ 
  geom_hline(yintercept=0.33, linetype="dashed", color = "red",size=.8)+ 
  geom_hline(yintercept=0.5, linetype="dashed", color = "red",size=.8)+ 
  geom_hline(yintercept=1, linetype="dashed", color = "red",size=.8)+
  facet_wrap(~scale)

# 14-Calculando a precipitação acumulada -------------------------------------

dados %>% group_by(year,month)%>% dplyr::summarise(sum(prec))

# 14-Gráfico com a frequência mensal para as estações -------------------------------------
p1<-ggplot(frequencia2%>% filter(cod==1,scale==1), aes(y=freq,x=ano, fill=region)) +geom_bar(position="dodge", stat='identity')+ geom_line(color='black')+  geom_point()+ ylab('Frequência 1')
p2<-ggplot(frequencia2%>% filter(cod==2,scale==1), aes(y=freq,x=ano, fill=region)) +geom_bar(position="dodge", stat='identity') + geom_line(color='black')+  geom_point()+ylab('Frequência 2')
p3<-ggplot(frequencia2%>% filter(cod==4,scale==1), aes(y=freq,x=ano, fill=region)) +geom_bar(position="dodge", stat='identity')+ ylab('Frequência 4')
p4<-ggplot(frequencia2%>% filter(cod==5,scale==1), aes(y=freq,x=ano, fill=region)) +geom_bar(position="dodge", stat='identity')+ ylab('Frequência 5')
grid.arrange(p1, p2, p3,p4, ncol=2) 
#https://www.apac.pe.gov.br/agrometeorologia/196-agrometeorologia/544-fracao-de-cobertura-vegetal

#15- Longitude e Latitude como valor numérico -------------------------------------
freq2$lon<- as.numeric(freq2$lon)
freq2$lat<- as.numeric(freq2$lat)
freq4$lon<- as.numeric(freq4$lon)
freq4$lat<- as.numeric(freq4$lat)
frequencia2$lon<- as.numeric(frequencia2$lon)
frequencia2$lat<- as.numeric(frequencia2$lat)
intensidade2$lon<- as.numeric(intensidade2$lon)
intensidade2$lat<- as.numeric(intensidade2$lat)
intensidade4$lon<- as.numeric(intensidade4$lon)
intensidade4$lat<- as.numeric(intensidade4$lat)

#15- Lendo o shapefile das regiões de Pernambuco -------------------------------------
macroreg <- read_sf('macroreg.shp') #lendo o shapefile das macrorregiões de pernambuco

#MAPA COM AS FREQUÊNCIAS MENSAIS
freq4 %>% 
  #filter(scale==1) %>% 
  ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=2.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+
  facet_wrap(~scale)+scale_color_gradientn(colours = jet(10))
#geom_text(aes(x=lon,y=lat,label=cod))

#Frequência ANUAL
p1<-freq2 %>% filter(scale==1) %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_ano),size=3.5)+
  geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))
p2<-freq2 %>% filter(scale==3) %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_ano),size=3.5)+
  geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))
p3<-freq2 %>% filter(scale==6) %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_ano),size=3.5)+
  geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))
p4<-freq2 %>% filter(scale==12) %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_ano),size=3.5)+
  geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))
grid.arrange(p1,p2,p3,p4,ncol=4,nrow=1)

#Frequência sazonal de seca no INVERNO
p1<-freq4 %>% filter(scale==1,season=='INVERNO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p2<-freq4 %>% filter(scale==3,season=='INVERNO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p3<-freq4 %>% filter(scale==6,season=='INVERNO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p4<-freq4 %>% filter(scale==12,season=='INVERNO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
grid.arrange(p1,p2,p3,p4,ncol=2,nrow=2)

#Frequência sazonal de seca no VERAO
p1<-freq4 %>% filter(scale==1,season=='VERAO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p2<-freq4 %>% filter(scale==3,season=='VERAO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p3<-freq4 %>% filter(scale==6,season=='VERAO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p4<-freq4 %>% filter(scale==12,season=='VERAO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
grid.arrange(p1,p2,p3,p4,ncol=2,nrow=2)

#Frequência sazonal de seca no OUTONO
p1<-freq4 %>% filter(scale==1,season=='OUTONO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p2<-freq4 %>% filter(scale==3,season=='OUTONO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p3<-freq4 %>% filter(scale==6,season=='OUTONO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p4<-freq4 %>% filter(scale==12,season=='OUTONO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
grid.arrange(p1,p2,p3,p4,ncol=2,nrow=2)

#Frequência sazonal de seca no PRIMAVERA
p1<-freq4 %>% filter(scale==1,season=='PRIMAVERA') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p2<-freq4 %>% filter(scale==3,season=='PRIMAVERA') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p3<-freq4 %>% filter(scale==6,season=='PRIMAVERA') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p4<-freq4 %>% filter(scale==12,season=='PRIMAVERA') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
grid.arrange(p1,p2,p3,p4,ncol=2,nrow=2)

#Intensidade sazonal de seca no INVERNO
p1<-intensidade4 %>% filter(scale==1,season=='INVERNO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p2<-intensidade4 %>% filter(scale==3,season=='INVERNO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p3<-intensidade4 %>% filter(scale==6,season=='INVERNO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p4<-intensidade4 %>% filter(scale==12,season=='INVERNO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
grid.arrange(p1,p2,p3,p4,ncol=2,nrow=2)

#Intensidade sazonal de seca no VERAO
p1<-intensidade4 %>% filter(scale==1,season=='VERAO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p2<-intensidade4 %>% filter(scale==3,season=='VERAO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p3<-intensidade4 %>% filter(scale==6,season=='VERAO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p4<-intensidade4 %>% filter(scale==12,season=='VERAO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
grid.arrange(p1,p2,p3,p4,ncol=2,nrow=2)

#Intensidade sazonal de seca no OUTONO
p1<-intensidade4 %>% filter(scale==1,season=='OUTONO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p2<-intensidade4 %>% filter(scale==3,season=='OUTONO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p3<-intensidade4 %>% filter(scale==6,season=='OUTONO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p4<-intensidade4 %>% filter(scale==12,season=='OUTONO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
grid.arrange(p1,p2,p3,p4,ncol=2,nrow=2)

#Intensidade sazonal de seca no PRIMAVERA
p1<-intensidade4 %>% filter(scale==1,season=='PRIMAVERA') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p2<-intensidade4 %>% filter(scale==3,season=='PRIMAVERA') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p3<-intensidade4 %>% filter(scale==6,season=='PRIMAVERA') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
p4<-intensidade4 %>% filter(scale==12,season=='PRIMAVERA') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=3.5)+
  geom_sf(data=macroreg, fill='transparent',show.legend = TRUE)+scale_color_gradientn(colours = jet(10))
grid.arrange(p1,p2,p3,p4,ncol=2,nrow=2)
###############################################################################################################
############################################################################################################
############################################################################################################

p1<-freq2 %>% filter(scale==1) %>% ggplot()+geom_point(aes(lon,lat,color=freq_ano),size=1.5)+ geom_sf(data=macroreg,fill='transparent')+scale_color_gradientn(colours = jet(10)) +theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+  labs(x='',y='')
p2<-freq2 %>% filter(scale==3) %>% ggplot()+geom_point(aes(lon,lat,color=freq_ano),size=1.5)+ geom_sf(data=macroreg,fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p3<-freq2 %>% filter(scale==6) %>% ggplot()+geom_point(aes(lon,lat,color=freq_ano),size=1.5)+ geom_sf(data=macroreg,fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p4<-freq2 %>% filter(scale==12)%>% ggplot()+geom_point(aes(lon,lat,color=freq_ano),size=1.5)+geom_sf(data=macroreg,fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p5<-freq4 %>% filter(scale==1,season=='VERAO') %>% ggplot()+geom_point(aes(lon,lat,color=freq_sazonal),size=1.5)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p6<-freq4 %>% filter(scale==3,season=='VERAO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=1.5)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p7<-freq4 %>% filter(scale==6,season=='VERAO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=1.5)+ geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p8<-freq4 %>% filter(scale==12,season=='VERAO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=1.5)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p9<-freq4 %>% filter(scale==1,season=='OUTONO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=1.5)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p10<-freq4 %>% filter(scale==3,season=='OUTONO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=1.5)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p11<-freq4 %>% filter(scale==6,season=='OUTONO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=1.5)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p12<-freq4 %>% filter(scale==12,season=='OUTONO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=1.5)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p13<-freq4 %>% filter(scale==1,season=='INVERNO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=1.5)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p14<-freq4 %>% filter(scale==3,season=='INVERNO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=1.5)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p15<-freq4 %>% filter(scale==6,season=='INVERNO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=1.5)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p16<-freq4 %>% filter(scale==12,season=='INVERNO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=1.5)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p17<-freq4 %>% filter(scale==1,season=='PRIMAVERA') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=1.5)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p18<-freq4 %>% filter(scale==3,season=='PRIMAVERA') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=1.5)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p19<-freq4 %>% filter(scale==6,season=='PRIMAVERA') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=1.5)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p20<-freq4 %>% filter(scale==12,season=='PRIMAVERA') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=freq_sazonal),size=1.5)+ geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
grid.arrange(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,ncol=4,nrow=5)


p1<-intensidade2 %>% filter(scale==1) %>% ggplot()+geom_point(aes(lon,lat,color=int),size=2)+ geom_sf(data=macroreg,fill='transparent')+scale_color_gradientn(colours = jet(10)) +theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+  labs(x='',y='')
p2<-intensidade2 %>% filter(scale==3) %>% ggplot()+geom_point(aes(lon,lat,color=int),size=2)+ geom_sf(data=macroreg,fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p3<-intensidade2 %>% filter(scale==6) %>% ggplot()+geom_point(aes(lon,lat,color=int),size=2)+ geom_sf(data=macroreg,fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p4<-intensidade2 %>% filter(scale==12)%>% ggplot()+geom_point(aes(lon,lat,color=int),size=2)+geom_sf(data=macroreg,fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p5<-intensidade4 %>% filter(scale==1,season=='VERAO') %>% ggplot()+geom_point(aes(lon,lat,color=int),size=2)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p6<-intensidade4 %>% filter(scale==3,season=='VERAO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=2)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p7<-intensidade4 %>% filter(scale==6,season=='VERAO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=2)+ geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p8<-intensidade4 %>% filter(scale==12,season=='VERAO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=2)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p9<-intensidade4 %>% filter(scale==1,season=='OUTONO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=2)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p10<-intensidade4 %>% filter(scale==3,season=='OUTONO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=2)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p11<-intensidade4 %>% filter(scale==6,season=='OUTONO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=2)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p12<-intensidade4 %>% filter(scale==12,season=='OUTONO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=2)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p13<-intensidade4 %>% filter(scale==1,season=='INVERNO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=2)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p14<-intensidade4 %>% filter(scale==3,season=='INVERNO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=2)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p15<-intensidade4 %>% filter(scale==6,season=='INVERNO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=2)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p16<-intensidade4 %>% filter(scale==12,season=='INVERNO') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=2)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p17<-intensidade4 %>% filter(scale==1,season=='PRIMAVERA') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=2)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p18<-intensidade4 %>% filter(scale==3,season=='PRIMAVERA') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=2)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p19<-intensidade4 %>% filter(scale==6,season=='PRIMAVERA') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=2)+geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
p20<-intensidade4 %>% filter(scale==12,season=='PRIMAVERA') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=2)+ geom_sf(data=macroreg, fill='transparent')+scale_color_gradientn(colours = jet(10))+ theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.text.y = element_blank(),legend.key.size = unit(.35, 'cm'))+labs(x='',y='')
grid.arrange(p6,p10,p14,p18,ncol=1,nrow=4)


#MAPAS COM AS FREQUÊNCIAS ANUAIS
frequencia2 %>% 
  filter(scale==1,region=='SertÃ£o') %>% 
  ggplot()+geom_point(aes(x=lon,y=lat,color=freq),size=2.5)+
  geom_sf(data=sertao, fill='transparent',show.legend = TRUE)+
  facet_wrap(~ano)+ scale_color_gradientn(colours = jet(10))
#MAPA DA INTENSIDADE

intensidade<-left_join(intensidade,dados4,by=c('cod'='cod'))
intensidade$lon<- as.numeric(intensidade$lon)
intensidade$lat<- as.numeric(intensidade$lat)
intensidade%>% filter(scale==12,region=='SertÃ£o') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=2.5)+
  geom_sf(data=sertao, fill='transparent',show.legend = TRUE)+facet_wrap(~ano)+ scale_color_gradientn(colours = jet(10))
#geom_text(aes(x=lon,y=lat,label=cod))

intensidade%>% filter(scale==12,region=='Agreste') %>% ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=2.5)+
  geom_sf(data=agreste, fill='transparent',show.legend = TRUE)+facet_wrap(~ano)+ scale_color_gradientn(colours = jet(10))

intensidade%>% 
  filter(scale==12,region=='Zona da Mata') %>% 
  ggplot()+geom_point(aes(x=lon,y=lat,color=int),size=2.5)+
  geom_sf(data=zona, fill='transparent',show.legend = TRUE)+
  facet_wrap(~ano)+ scale_color_gradientn(colours = jet(10))

area3 %>% 
  filter(scale==6,region=='Zona da Mata') %>% #
  ggplot()+geom_point(aes(x=lon,y=lat,color=area),size=2.5)+
  geom_sf(data=zona, fill='transparent',show.legend = TRUE)+
  facet_wrap(~ano)+ scale_color_gradientn(colours = jet(10))
#unique(area3$region)"SertÃ£o"      "Agreste"      "Zona da Mata"

sertao<-macroreg[macroreg$MACRO=="SERTAO",]
zona<-macroreg[macroreg$MACRO=="MATA",]
agreste<-macroreg[macroreg$MACRO=="AGRESTE",]

frequencia3 <- data2 %>%
  na.omit() %>%
  dplyr::group_by(cod,scale,mes)%>%
  dplyr::summarise(freq = sum(spi<(-0.5)))%>% # calcula para valores menores que 0 ou menor que -0.5
  mutate(freq1 = replace(freq, freq >0, 1))

#16- Testando a interpolação por IDW -------------------------------------
head(data3)

freq21 <- data3[c('cod','lat','lon','category','scale','freq_ns')] #freq_mes
freq21$lat <- as.numeric(freq21$lat)
freq21$lon <- as.numeric(freq21$lon)
freq21$x <- freq21$lon
freq21$y <- freq21$lat

coordinates(freq21) <- ~x + y
x.range <- as.numeric(c(min(freq21$lon)-2,max(freq21$lon)+2))
y.range <- as.numeric(c(min(freq21$lat)-2,max(freq21$lat)+2))
tz.grid <- expand.grid(x = seq(from = x.range[1],to = x.range[2],by = 0.0125),
                       y = seq(from = y.range[1],to = y.range[2],by = 0.0125))

coordinates(tz.grid) <- ~x + y
#plot(tz.grid, cex = 1.5, col = "grey")
#points(freq21, pch = 16, col = "blue", cex = 0.5)

idw <- gstat::idw(formula=freq_ns~1, locations=freq21, tz.grid)
idw.output <- as.data.frame(idw)
names(idw.output)[1:3] <- c("Longitude", "Latitude", "Freq") 

#ggplot() + geom_tile(data = idw.output,aes(x = Longitude,y = Latitude,fill = precip)) + 
#  geom_point(data = freq2, aes(x = lon, y = lat),shape = 21, color = "red")


tz.contour1 <- readShapeSpatial("Macroreg.shp")
tz.contour2 <- fortify(tz.contour1, region = "MACRO") #

idw.r <- rasterFromXYZ(idw.output[,c('Longitude','Latitude','Freq')])
idw.crp <- crop(idw.r, tz.contour1)
idw.msk <- mask(idw.crp,tz.contour1)
idw.msk.dfr <- as.data.frame(rasterToPoints(idw.msk))
names(idw.msk.dfr)[1:2]<-c('Longitude','Latitude')

p1<-ggplot()+ 
  geom_tile(data = idw.msk.dfr, alpha = 2,aes(x = Longitude,y = Latitude,fill = Freq)) + 
  geom_path(data = tz.contour2, aes(long, lat, group = group), color = "black") +
  geom_point(data = as.data.frame(freq21) %>% filter(scale==1), aes(x = lon, y = lat), shape = 16, cex = 1.5, color = "black") + 
  scale_fill_gradientn(colors = c("blue","yellow", "red")) +
  labs(fill = "Frequência de seca", title = "Freq. anual de seca em PE") +
  coord_equal() + theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(), 
        panel.background = element_blank())

p2<-ggplot()+ 
  geom_tile(data = idw.msk.dfr, alpha = 2,aes(x = Longitude,y = Latitude,fill = Freq)) + 
  geom_path(data = tz.contour2, aes(long, lat, group = group), color = "black") +
  geom_point(data = as.data.frame(freq21) %>% filter(scale==3), aes(x = lon, y = lat), shape = 16, cex = 1.5, color = "black") + 
  scale_fill_gradientn(colors = c("blue","yellow", "red")) +
  labs(fill = "Frequência de seca", title = "Freq. anual de seca em PE") +
  coord_equal() + theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(), 
                        panel.background = element_blank())

p3<-ggplot()+ 
  geom_tile(data = idw.msk.dfr, alpha = 2,aes(x = Longitude,y = Latitude,fill = Freq)) + 
  geom_path(data = tz.contour2, aes(long, lat, group = group), color = "black") +
  geom_point(data = as.data.frame(freq21) %>% filter(scale==6), aes(x = lon, y = lat), shape = 16, cex = 1.5, color = "black") + 
  scale_fill_gradientn(colors = c("blue","yellow", "red")) +
  labs(fill = "Frequência de seca", title = "Freq. anual de seca em PE") +
  coord_equal() + theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(), 
                        panel.background = element_blank())

p4<-ggplot()+ 
  geom_tile(data = idw.msk.dfr, alpha = 2,aes(x = Longitude,y = Latitude,fill = Freq)) + 
  geom_path(data = tz.contour2, aes(long, lat, group = group), color = "black") +
  geom_point(data = as.data.frame(freq21), aes(x = lon, y = lat), shape = 16, cex = 1.5, color = "black") + 
  scale_fill_gradientn(colors = c("blue","yellow", "red")) +
  labs(fill = "Frequência de seca", title = "Freq. anual de seca em PE") +
  coord_equal() + theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(), 
                        panel.background = element_blank())#facet_wrap(scale~category)

grid.arrange(p1,p2,p3,p4,ncol=2,nrow=2)




#Instalando os pacotes
install.packages(c('raster','rgdal','rgeos','geodata','tidyverse','gtools','RSAGA','sf','fs',
                   'gstat','sp','maptools','Metrics'))

#Importando os pacotes
library(raster)
library(rgdal)
library(rgeos)
library(geodata)
library(tidyverse)
library(gtools)
library(RSAGA)
library(sf)
library(fs)
library(gstat)
library(sp)
library(maptools)
library(Metrics)

#Importando a função de cálculo do SPI
source('SPI_function.R')

#Importando os dados de precipitação
dados <- readr::read_tsv("join_prec_full_region.txt")
dados <- dados[c('cod','year','month','prec')]
dados$prec <- as.numeric(dados$prec)

#Calculando os valores de SPI
data2 <- data.frame()
for (i in unique(dados$cod)){
  for (j in c(1,3,6,12)){
    spi <- SPI(as.data.frame(dados[dados$cod==i,][,-1]), 
               scale=j,distr="gamma") %>%tibble::as_tibble() %>% dplyr::select(3) %>% pull()
    data2<-dplyr::bind_rows(data2,bind_cols(cod=i,ano=dados[dados$cod==i,]$year,
                                            mes=dados[dados$cod==i,]$month,
                                            scale=j,spi=spi))}}

#Importando novamente a base de dados
dados3 <- read.delim2("join_prec_full_region.txt", sep="\t", header = TRUE)
#criando um dataframe com as localizações das estações pluviométricas
dados4 <- dados3 %>% filter(year==1962,month==1)%>%arrange(cod)%>% select(cod,lon,lat,region)
#Inserindo as estações na base dos valores de SPI
data2<-left_join(data2,dados4,by=c('cod'='cod'))

#Classificando os valores de SPI
data2<-data2 %>% 
  mutate(category=cut(spi, breaks=c(-Inf,-2,-1.5,-1,-0.5,Inf),
                      labels=c("Seca Extrema","Seca severa",
                               "Seca moderada","Seca leve","Não seca")))
#Calculando 
data3<-data2%>% na.omit() %>% dplyr::group_by(cod,lon,lat,scale,category)%>%
  dplyr::summarise(freq_ns = sum(category=='Não seca', category=='Seca moderada',
                                 category=='Seca leve',category=='Seca severa',
                                 category=='Seca Extrema')/612)

#Selecionando uma escala e uma categoria para interpolar
data5<-data3 %>% filter(category=='Seca Extrema',scale==1)

datas<-data3%>% filter(category=='Seca moderada',scale==1)
datas<-datas[c('cod','lon','lat')] #criando um dataframe apenas com todas as estações e suas localizações 
datas$scale <- c()
datas$category <- c()
datas$freq_ns <- c()

data6 <- dplyr::bind_rows(data5,anti_join(datas, data5, by='cod')) %>% arrange(cod)
data6[["scale"]][is.na(data6[["scale"]])] <- unique(data6$scale)[2]
data6[["category"]][is.na(data6[["category"]])] <- unique(data6$category)[2]
data6[["freq_ns"]][is.na(data6[["freq_ns"]])] <- 0
data5 <- data6 

#Base que será usada para interporlar os dados de frequência das categorias de seca
data5<-data5[c('lon','lat','freq_ns')] #definindo as colunas desejadas: latitude, longitude e frequência de seca
data5$x <- as.numeric(data5$lon) #definindo longitude como valor numérico
data5$y <- as.numeric(data5$lat) #definindo latitude como valor numérico

#Criando um grid
x.range <- as.numeric(c(-42.375, -33.875))
y.range <- as.numeric(c(-10.375, -6.875))
pe.grid <- expand.grid(x = seq(from = x.range[1],to = x.range[2],by = .003125),
                       y = seq(from = y.range[1],to = y.range[2],by = .003125))
coordinates(data5)<- ~x + y #colocando os dados no formato SpatialPointsDataFrame
coordinates(pe.grid) <- ~x + y#colocando o grid no formato SpatialPointsDataFrame

#calculando o IDW e colocando em formato dataframe
idw.output <- as.data.frame(idw(formula=freq_ns~1, locations=data5, pe.grid))
names(idw.output)[1:3] <- c("Longitude", "Latitude", "freq")#renomeando as colunas de latitude e longitude

pe.contorno1 <- readShapeSpatial("Macroreg.shp") #importando o shapefile (esse método está depreciado, mas ainda pode ser usado)
pe.contorno2 <- fortify(tz.contour1, region = "MACRO") #colocando o shapefile no formato fortify


idw.r <- rasterFromXYZ(idw.output[,c('Longitude','Latitude','freq')]) #criando um objeto raster
idw.crp <- crop(idw.r, pe.contorno1) #cria um objeto geográfico
idw.msk <- mask(idw.crp,pe.contorno1) #cria um novo objeto raster
idw.msk.df <- as.data.frame(rasterToPoints(idw.msk)) #Camada raster para linhas de contorno em formato dataframe
names(idw.msk.df)[1:2]<-c('Longitude','Latitude') #renomeando as colunas de longitude e latitude do dataframe

#Gráfico do mapa com a interpolação dos valores do IDW da frequência de seca em Pernambuco
ggplot()+ 
  geom_tile(data = idw.msk.df, alpha = 2,aes(x = Longitude,y = Latitude,fill = round(freq, 2))) + 
  #camada com os valores interpolados
  scale_fill_gradientn(colors = c("purple","blue","green","yellow","orange","red"))+
  #camada com as cores dos valores
  geom_path(data = pe.contorno2, aes(long, lat, group = group), color = "black") +
  #camada do contorno do mapa
  geom_point(data = as.data.frame(data5), aes(x ,y), shape = 16, cex = 1, color = "black") + 
  #camada com os pontos das localizações das estações pluviométricas
  labs(fill = "Freq.", title = "Frequência de seca **categoria** (**escala**) em PE") +
  coord_equal() + theme_classic()+ theme(legend.position = "bottom", legend.key.width = unit(2, 'cm'),
        plot.title = element_text(size = 15))

#Tentativa de validação cruzada para o IDW

#Ojetivo: encontrar o melhor parâmetro que otimiza o modelo IDW.
tabela_cv = data.frame(expand.grid (k = c(seq (0.5, 5, by = 0.5)),
                                   mape = NA, mae = NA, rmse = NA, r2= NA))


#função para o coeficiente de determinação
fr2 = function(ypred, yobs){r2 = (summary(lm(ypred ~ yobs))$r.squared)
  return(r2)}


set.seed(42) #semente
for (i in 1:nrow(tabela_cv)){
  modelo = gstat::krige.cv(freq_ns ~ 1, locations = data5, nfold = 10,set = list(idp = tabela_cv$k[i]))
  tabela_cv$mape[i] = mape(modelo$var1.pred, modelo$observed)
  tabela_cv$mae[i] = mae(modelo$var1.pred, modelo$observed)
  tabela_cv$rmse[i] = rmse(modelo$var1.pred, modelo$observed)
  tabela_cv$r2[i] = fr2(modelo$var1.pred, modelo$observed)}

#Parâmetro que minimiza os erros
idw_exp_mape = tabela_cv %>%  filter(mape == min(mape)) %>%  select(k)
idw_exp_rmse = tabela_cv %>%  filter(rmse == min(rmse)) %>%  select(k)
idw_exp_mae = tabela_cv %>%  filter(mae == min(mae)) %>%  select(k)
idw_exp_r2 = tabela_cv %>%  filter(r2 == max(r2)) %>%  select(k)

#visualizando o melhor parâmetro
idw_exp_mape
idw_exp_mae
idw_exp_r2
idw_exp_rmse

#Gráfico dos resultados da validação cruzada para cada parâmetro
p1<-ggplot(data=tabela_cv,aes(x=k, y=rmse))+ geom_line()+
  geom_vline(xintercept=tabela_cv %>% filter(rmse == min(rmse)) %>% select(k) %>% first(),
             linetype="dashed", color = "red",size=.8)
p2<-ggplot(data=tabela_cv,aes(x=k, y=mae))+ geom_line()+
  geom_vline(xintercept=tabela_cv %>% filter(mae == min(mae)) %>% select(k) %>% first(),
             linetype="dashed", color = "red",size=.8)
p3<-ggplot(data=tabela_cv,aes(x=k, y=r2))+ geom_line()+
  geom_vline(xintercept=tabela_cv %>%  filter(r2 == max(r2)) %>% select(k) %>% first(),
             linetype="dashed", color = "red",size=.8)
p4<-ggplot(data=tabela_cv,aes(x=k, y=mape))+ geom_line()+
  geom_vline(xintercept=tabela_cv %>%  filter(mape == min(mape)) %>% select(k) %>% first(),
             linetype="dashed", color = "red",size=.8)
grid.arrange(p1,p2,p3,p4,ncol=2,nrow=2)  



freq2 #seca mensal e anual
freq4 #seca sazonal
intensidade2 #intensidade de seca anual
intensidade4 #intensidade de seca sazonal
area #área afetada pela seca
area2 #área afetada pela seca
area3 %>% view() #área afetada pela seca sazonal

#-------------------------------------------------------------------------------------------------------------------

library(tidyverse)

# read data
dt <- readr::read_tsv("teste.txt") %>% 
  mutate(season=tolower(season))


# anual -------------------------------------------------------------------

# scale=12, tipos de seca
tot_seca_12 <- data2 %>% 
  dplyr::filter(scale==12,
                !is.na(spi)
  ) %>% 
  dplyr::group_by(cod,lon,lat,region) %>% 
  dplyr::summarise(freq_seca=sum(category!="Não seca")/601,.groups = "keep") %>%
  # dplyr::summarise(freq_seca=sum(category=="Seca moderada")/601,.groups = "keep") %>% 
  mutate(scale=12,seca="Total",.before=freq_seca)



#Selecionando uma escala e uma categoria para interpolar
data5<-tot_seca_12
#Base que será usada para interporlar os dados de frequência das categorias de seca
data5<-data5[c('lon','lat','freq_seca')] #definindo as colunas desejadas: latitude, longitude e frequência de seca
data5$x <- as.numeric(data5$lon) #definindo longitude como valor numérico
data5$y <- as.numeric(data5$lat) #definindo latitude como valor numérico

#Criando um grid
x.range <- as.numeric(c(-42.375, -33.875))
y.range <- as.numeric(c(-10.375, -6.875))
pe.grid <- expand.grid(x = seq(from = x.range[1],to = x.range[2],by = .003125),
                       y = seq(from = y.range[1],to = y.range[2],by = .003125))
coordinates(data5)<- ~x + y #colocando os dados no formato SpatialPointsDataFrame
coordinates(pe.grid) <- ~x + y#colocando o grid no formato SpatialPointsDataFrame

#calculando o IDW e colocando em formato dataframe
idw.output <- as.data.frame(idw(formula=freq_seca~1, locations=data5, pe.grid))
names(idw.output)[1:3] <- c("Longitude", "Latitude", "freq")#renomeando as colunas de latitude e longitude

pe.contorno1 <- readShapeSpatial("Macroreg.shp") #importando o shapefile (esse método está depreciado, mas ainda pode ser usado)
pe.contorno2 <- fortify(tz.contour1, region = "MACRO") #colocando o shapefile no formato fortify


idw.r <- rasterFromXYZ(idw.output[,c('Longitude','Latitude','freq')]) #criando um objeto raster
idw.crp <- crop(idw.r, pe.contorno1) #cria um objeto geográfico
idw.msk <- mask(idw.crp,pe.contorno1) #cria um novo objeto raster
idw.msk.df <- as.data.frame(rasterToPoints(idw.msk)) #Camada raster para linhas de contorno em formato dataframe
names(idw.msk.df)[1:2]<-c('Longitude','Latitude') #renomeando as colunas de longitude e latitude do dataframe

#Gráfico do mapa com a interpolação dos valores do IDW da frequência de seca em Pernambuco
ggplot()+ 
  geom_tile(data = idw.msk.df, alpha = 2,aes(x = Longitude,y = Latitude,fill = round(freq, 2))) + 
  #camada com os valores interpolados
  scale_fill_gradientn(colors = c("purple","blue","green","yellow","orange","red"))+
  #camada com as cores dos valores
  geom_path(data = pe.contorno2, aes(long, lat, group = group), color = "black") +
  #camada do contorno do mapa
  #geom_point(data = as.data.frame(data5), aes(x ,y), shape = 16, cex = 1, color = "black") + 
  #camada com os pontos das localizações das estações pluviométricas
  labs(fill = "Freq.", title = "Frequência de seca **categoria** (**escala**) em PE") +
  coord_equal() + theme_classic()+ theme(legend.position = "bottom", legend.key.width = unit(2, 'cm'),
                                         plot.title = element_text(size = 15))






















tot_seca_leve_12 <- data2 %>% dplyr::filter(scale==12,!is.na(spi)
  ) %>% dplyr::group_by(cod,lon,lat,region) %>% 
  # dplyr::summarise(freq_seca=sum(category!="Não seca")/601,.groups = "keep") %>%
  dplyr::summarise(freq_seca=sum(category=="Seca leve")/601,.groups = "keep") %>%
  mutate(scale=12,seca="Seca leve",.before=freq_seca)

tot_seca_moderada_12 <- data2 %>% dplyr::filter(scale==12,!is.na(spi)
  ) %>% dplyr::group_by(cod,lon,lat,region) %>% 
  # dplyr::summarise(freq_seca=sum(category!="Não seca")/601,.groups = "keep") %>%
  dplyr::summarise(freq_seca=sum(category=="Seca moderada")/601,.groups = "keep") %>%
  mutate(scale=12,seca="Seca moderada",.before=freq_seca)

tot_seca_severa_12 <- data2 %>% dplyr::filter(scale==12,!is.na(spi)
  ) %>% dplyr::group_by(cod,lon,lat,region) %>% 
  # dplyr::summarise(freq_seca=sum(category!="Não seca")/601,.groups = "keep") %>%
  dplyr::summarise(freq_seca=sum(category=="Seca severa")/601,.groups = "keep") %>%
  mutate(scale=12,seca="Seca severa",.before=freq_seca)

tot_seca_extrema_12 <- data2 %>% dplyr::filter(scale==12,!is.na(spi)
  ) %>% dplyr::group_by(cod,lon,lat,region) %>% 
  # dplyr::summarise(freq_seca=sum(category!="Não seca")/601,.groups = "keep") %>%
  dplyr::summarise(freq_seca=sum(category=="Seca Extrema")/601,.groups = "keep") %>%
  mutate(scale=12,seca="Seca Extrema",.before=freq_seca)


out <- bind_rows(
  tot_seca_12,
  tot_seca_leve_12,
  tot_seca_moderada_12,
  tot_seca_severa_12,
  tot_seca_extrema_12
)
###

# sazonal ----------------------------------------------------------------

# verao = 151
# primavera = 153
# outono = 153
# inverno = 153

# scale=3, season =primavera,verao,outono,inverno
dt %>% 
  dplyr::filter(scale==3,
                season=="primavera",
                !is.na(spi)
  ) %>% 
  dplyr::group_by(cod,lon,lat,region) %>% 
  dplyr::summarise(freq_seca=sum(category!="Não seca")/153,.groups = "keep") %>%
  # dplyr::summarise(freq_seca=sum(category=="Seca moderada")/153,.groups = "keep") %>%
  mutate(scale=12,seca="Total",.before=freq_seca)
####

# juntar (terminar...)
out <- bind_rows(
  tot_seca_12,
  tot_seca_moderada_12
)


# barplot -----------------------------------------------------------------

dt %>% 
  dplyr::filter(scale==12,
                region=="Zona da Mata",
                !is.na(spi)
  ) %>% 
  pull(category) %>% 
  magrittr::equals("Seca moderada") %>% 
  sum() %>% 
  magrittr::divide_by(((51*64*12)-(11*64)))



# sertao
sum(x$category!="Não seca",na.rm=T)/((51*64*12)-(11*64))

# agreste
sum(x$category!="Não seca",na.rm=T)/((51*45*12)-(11*45))

# zona da mata
sum(x$category!="Não seca",na.rm=T)/((51*24*12)-(11*24))